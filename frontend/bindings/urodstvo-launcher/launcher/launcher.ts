// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as minecraft$0 from "../minecraft/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

export function ChooseDirectory(): Promise<string> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1904846911) as any;
    return $resultPromise;
}

export function CreateFreeAccount(username: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(392868426, username) as any;
    return $resultPromise;
}

export function GetAccounts(): Promise<$models.AccountsInfo> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2313763263) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType0($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetInstalledVersion(): Promise<minecraft$0.MinecraftVersionInfo[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2552268045) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType2($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetLastPlayedVersion(): Promise<minecraft$0.MinecraftVersionInfo | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3239363788) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType3($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetLauncherSettings(): Promise<$models.LauncherSettings> & { cancel(): void } {
    let $resultPromise = $Call.ByID(593284950) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType4($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetLauncherVersion(): Promise<string> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3712935077) as any;
    return $resultPromise;
}

export function GetMinecraftVersions(): Promise<minecraft$0.MinecraftVersionInfo[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2707100775) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType2($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetTotalRAM(): Promise<number> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2275920129) as any;
    return $resultPromise;
}

export function OpenMinecraftDirectory(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3009786339) as any;
    return $resultPromise;
}

export function SaveLauncherSettings(settings: $models.LauncherSettings): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2833353209, settings) as any;
    return $resultPromise;
}

export function SelectAccount(id: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(625946280, id) as any;
    return $resultPromise;
}

export function StartMinecraft(opts: $models.StartOptions): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3205254530, opts) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $models.AccountsInfo.createFrom;
const $$createType1 = minecraft$0.MinecraftVersionInfo.createFrom;
const $$createType2 = $Create.Array($$createType1);
const $$createType3 = $Create.Nullable($$createType1);
const $$createType4 = $models.LauncherSettings.createFrom;
